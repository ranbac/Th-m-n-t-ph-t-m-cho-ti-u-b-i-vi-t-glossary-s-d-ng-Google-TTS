/**
 * =================================================================================
 * PHI√äN B·∫¢N HO√ÄN CH·ªàNH CU·ªêI C√ôNG (v2)
 * =================================================================================
 * Ch·ª©c nƒÉng: Th√™m n√∫t ph√°t √¢m cho 'glossary' v·ªõi giao di·ªán admin, cache,
 * t∆∞∆°ng th√≠ch iOS v√† ƒë√£ s·ª≠a c√°c l·ªói v·ªÅ ph√°t l·∫°i √¢m thanh.
 */

// -----------------------------------------------------------------------------
// PH·∫¶N 1: TH√äM N√öT B·∫§M V√ÄO N·ªòI DUNG B√ÄI VI·∫æT
// -----------------------------------------------------------------------------
function them_nut_doc_tieu_de_glossary_final($content) {
    if ( is_singular('glossary') ) {
        $nut_bam_html = '
            <p>
                <strong>Ph√°t √¢m</strong> 
                <button id="google-tts-button" 
                        data-post-id="' . get_the_ID() . '" 
                        style="cursor: pointer; border: none; background: none; font-size: 1.5em; vertical-align: middle; padding: 0;">
                        üîä
                </button>
                <span id="google-tts-status" style="font-size: 0.8em; margin-left: 8px;"></span>
            </p>
            <hr>';
        return $nut_bam_html . $content;
    }
    return $content;
}
add_filter('the_content', 'them_nut_doc_tieu_de_glossary_final');

// -----------------------------------------------------------------------------
// PH·∫¶N 2: TH√äM JAVASCRIPT V√ÄO FOOTER (ƒê√É S·ª¨A L·ªñI CH·∫§T L∆Ø·ª¢NG √ÇM THANH)
// -----------------------------------------------------------------------------
function them_script_cho_nut_doc_tieu_de_final() {
    if ( is_singular('glossary') ) {
        wp_register_script('google-tts-script', false);
        wp_enqueue_script('google-tts-script');
        wp_localize_script('google-tts-script', 'tts_ajax_object', [
            'ajax_url' => admin_url('admin-ajax.php'),
            'nonce'    => wp_create_nonce('google_tts_nonce')
        ]);
        ?>
        <script type="text/javascript" id="google-tts-script-inline">
        document.addEventListener('DOMContentLoaded', function() {
            const playButton = document.getElementById('google-tts-button');
            const statusLabel = document.getElementById('google-tts-status');
            
            const audioPlayer = new Audio();
            let isAudioReady = false;

            if (playButton) {
                playButton.addEventListener('click', async function() {

                    if (isAudioReady) {
                        // D√πng load() ƒë·ªÉ reset b·ªô ƒë·ªám audio c·ªßa tr√¨nh duy·ªát,
                        // kh·∫Øc ph·ª•c l·ªói √¢m thanh k√©m ch·∫•t l∆∞·ª£ng khi ph√°t l·∫°i.
                        audioPlayer.load(); 
                        audioPlayer.play();
                        return;
                    }

                    const postId = this.getAttribute('data-post-id');
                    audioPlayer.play().catch(e => {}); // T∆∞∆°ng th√≠ch iOS
                    
                    statusLabel.textContent = 'ƒêang t·∫£i...';
                    playButton.disabled = true;

                    const formData = new FormData();
                    formData.append('action', 'get_google_tts_audio');
                    formData.append('post_id', postId);
                    formData.append('nonce', tts_ajax_object.nonce);

                    try {
                        const response = await fetch(tts_ajax_object.ajax_url, {
                            method: 'POST',
                            body: formData
                        });
                        const data = await response.json();
                        if (data.success) {
                            audioPlayer.src = data.data.audioUrl;
                            audioPlayer.play();
                            statusLabel.textContent = '';
                            isAudioReady = true; 
                        } else {
                            throw new Error(data.data.message || 'C√≥ l·ªói x·∫£y ra.');
                        }
                    } catch (error) {
                        console.error('L·ªói khi x·ª≠ l√Ω TTS:', error);
                        statusLabel.textContent = error.message;
                    } finally {
                        playButton.disabled = false;
                    }
                });
            }
        });
        </script>
        <?php
    }
}
add_action('wp_footer', 'them_script_cho_nut_doc_tieu_de_final');

// -----------------------------------------------------------------------------
// PH·∫¶N 3: X·ª¨ L√ù AJAX PH√çA SERVER
// -----------------------------------------------------------------------------
function xu_ly_tts_ajax_final() {
    if (!isset($_POST['nonce']) || !wp_verify_nonce($_POST['nonce'], 'google_tts_nonce')) {
        wp_send_json_error(['message' => 'Y√™u c·∫ßu kh√¥ng h·ª£p l·ªá!'], 403);
        return;
    }

    if (!isset($_POST['post_id']) || !($post_id = intval($_POST['post_id']))) {
        wp_send_json_error(['message' => 'Thi·∫øu Post ID.'], 400);
        return;
    }
    
    $text_to_read = get_the_title($post_id);
    if (empty($text_to_read)) {
        wp_send_json_error(['message' => 'Kh√¥ng t√¨m th·∫•y ti√™u ƒë·ªÅ.'], 404);
        return;
    }

    // --- Logic Cache ---
    $upload_dir = wp_upload_dir();
    $cache_dir_path = $upload_dir['basedir'] . '/google-tts-cache';
    $cache_dir_url = $upload_dir['baseurl'] . '/google-tts-cache';
    if (!file_exists($cache_dir_path)) {
        wp_mkdir_p($cache_dir_path);
    }
    $file_name = md5($text_to_read) . '.mp3';
    $file_path = $cache_dir_path . '/' . $file_name;
    $file_url = $cache_dir_url . '/' . $file_name;

    if (file_exists($file_path)) {
        wp_send_json_success(['audioUrl' => $file_url]);
        return;
    }

    // --- Logic g·ªçi API Google ---
    $api_key = get_option('google_tts_api_key');
    if (empty($api_key)) {
        wp_send_json_error(['message' => 'L·ªói: API Key ch∆∞a ƒë∆∞·ª£c c·∫•u h√¨nh.'], 500);
        return;
    }
    
    $api_url = 'https://texttospeech.googleapis.com/v1/text:synthesize?key=' . $api_key;
    $request_body = [
        'input' => ['text' => $text_to_read],
        'voice' => ['languageCode' => 'cmn-CN', 'name' => 'cmn-CN-Standard-A'],
        'audioConfig' => ['audioEncoding' => 'MP3', 'speakingRate' => 0.8]
    ];
    
    $response = wp_remote_post($api_url, [
        'headers' => ['Content-Type' => 'application/json; charset=utf-8'],
        'body' => json_encode($request_body),
        'method' => 'POST',
        'timeout' => 15,
    ]);

    if (is_wp_error($response)) {
        wp_send_json_error(['message' => 'L·ªói k·∫øt n·ªëi ƒë·∫øn Google API.'], 500);
        return;
    }

    $response_code = wp_remote_retrieve_response_code($response);
    $response_body = json_decode(wp_remote_retrieve_body($response), true);

    if ($response_code === 200 && isset($response_body['audioContent'])) {
        $audio_content = base64_decode($response_body['audioContent']);
        if (file_put_contents($file_path, $audio_content)) {
            wp_send_json_success(['audioUrl' => $file_url]);
        } else {
            wp_send_json_error(['message' => 'Kh√¥ng th·ªÉ ghi file v√†o th∆∞ m·ª•c cache.'], 500);
        }
    } else {
        $error_message = $response_body['error']['message'] ?? 'L·ªói kh√¥ng x√°c ƒë·ªãnh t·ª´ Google API.';
        wp_send_json_error(['message' => 'L·ªói t·ª´ Google: ' . $error_message], 500);
    }
}
add_action('wp_ajax_get_google_tts_audio', 'xu_ly_tts_ajax_final');
add_action('wp_ajax_nopriv_get_google_tts_audio', 'xu_ly_tts_ajax_final');

// -----------------------------------------------------------------------------
// PH·∫¶N 4: T·∫†O GIAO DI·ªÜN ADMIN ƒê·ªÇ NH·∫¨P API KEY
// -----------------------------------------------------------------------------

/**
 * Th√™m m·ªôt trang c√†i ƒë·∫∑t v√†o menu "C√†i ƒë·∫∑t" (Settings)
 */
function google_tts_register_settings_page() {
    add_options_page(
        'Google TTS Settings',             // Ti√™u ƒë·ªÅ trang
        'Google TTS Settings',             // T√™n menu
        'manage_options',                  // Quy·ªÅn truy c·∫≠p
        'google-tts-settings-slug',        // Slug c·ªßa trang
        'google_tts_settings_page_html'    // H√†m ƒë·ªÉ render HTML
    );
}
add_action('admin_menu', 'google_tts_register_settings_page');

/**
 * H√†m render HTML cho trang c√†i ƒë·∫∑t
 */
function google_tts_settings_page_html() {
    if (!current_user_can('manage_options')) {
        return;
    }
    ?>
    <div class="wrap">
        <h1><?php echo esc_html(get_admin_page_title()); ?></h1>
        <p>Nh·∫≠p API Key c·ªßa b·∫°n cho d·ªãch v·ª• Google Cloud Text-to-Speech.</p>
        <form action="options.php" method="post">
            <?php
            settings_fields('google_tts_settings_group');
            do_settings_sections('google-tts-settings-slug');
            submit_button('L∆∞u thay ƒë·ªïi');
            ?>
        </form>
    </div>
    <?php
}

/**
 * ƒêƒÉng k√Ω setting, section, v√† field
 */
function google_tts_settings_init() {
    register_setting('google_tts_settings_group', 'google_tts_api_key', [
        'type' => 'string',
        'sanitize_callback' => 'sanitize_text_field',
        'default' => ''
    ]);

    add_settings_section(
        'google_tts_main_section',         
        'C√†i ƒë·∫∑t API Key',                 
        null,                              
        'google-tts-settings-slug'         
    );

    add_settings_field(
        'google_tts_api_key_field',        
        'Google TTS API Key',              
        'google_tts_api_key_field_callback', 
        'google-tts-settings-slug',        
        'google_tts_main_section'          
    );
}
add_action('admin_init', 'google_tts_settings_init');

/**
 * H√†m render HTML cho tr∆∞·ªùng nh·∫≠p API Key
 */
function google_tts_api_key_field_callback() {
    $api_key = get_option('google_tts_api_key');
    ?>
    <input type="text" 
           name="google_tts_api_key" 
           value="<?php echo esc_attr($api_key); ?>" 
           class="regular-text"
           placeholder="Nh·∫≠p API Key c·ªßa b·∫°n t·∫°i ƒë√¢y">
    <p class="description">
        API Key ƒë∆∞·ª£c l·∫•y t·ª´ <a href="https://console.cloud.google.com/" target="_blank">Google Cloud Console</a>.
    </p>
    <?php
}

